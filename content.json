[{"title":"springboot+vue前后端分离1--项目搭建","date":"2019-12-25T13:35:22.000Z","path":"2019/12/25/springboot+vue前后端分离1--项目搭建/","text":"项目搭建1. 前段项目构建使用vue-cli3构建代码: 1234npm install -g vue-clivue create vuehrcd vuehrnpm run dev vue-cli2.x创建项目是vue init hello-world或者使用Webstorm直接创建选择自主定制 加入router、vuex等 2. Element UI 安装及引入1.npm安装 1npm i element-ui -S 2.完整引入在 main.js 中写入以下内容： 1234567891011import Vue from 'vue';import ElementUI from 'element-ui';import 'element-ui/lib/theme-chalk/index.css';import App from './App.vue';Vue.use(ElementUI);new Vue(&#123; el: '#app', render: h =&gt; h(App)&#125;); 将App.vue留下 &lt;router-view/&gt; 123456789&lt;template&gt; &lt;div id=\"app\"&gt; &lt;router-view/&gt; &lt;/div&gt;&lt;/template&gt;&lt;style&gt;&lt;/style&gt; 3. 后端项目构建用idea创建springboot项目后 pom.xml加入druid、mysql、generator123456789101112131415161718192021222324252627282930 &lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt; &lt;version&gt;1.1.10&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;5.1.29&lt;/version&gt; &lt;/dependency&gt; &lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;configuration&gt; &lt;!--允许移动生成的文件--&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;!--允许覆盖生成的文件--&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 配置application.properties1234567spring.datasource.type=com.alibaba.druid.pool.DruidDataSourcespring.datasource.username=rootspring.datasource.password=mysql@123spring.datasource.url=jdbc:mysql:///vhr?useUnicode=true&amp;characterEncoding=utf-8server.port=8081 数据库逆向工程 方法一：使用 EasyCode 进行数据库逆向工程详细步骤=》EasyCode懒人必备，IntelliJIDEA中代码一键生成 方法二：使用generator3个必备文件 generator.properties generatorConfig.xml的配置数据源文件jdbc.properties 放在resources目录下 generator.properties 1234567891011121314151617driver=com.mysql.jdbc.Driverurl=jdbc:mysql://localhost:3306/vhr?useUnicode=true&amp;characterEncoding=utf-8username=rootpassword=mysql@123#entity 包名和 java目录modelPackage=com.tsune.entitymodelProject=src/main/java#sqlmap包名 和resources目录sqlPackage=sqlmappersqlProject=src/main/resources#mapper包名和 java目录mapperPackage=com.tsune.daomapperProject=src/main/javaschema=vhrtable=% generatorConfig.xml注意修改项目的 mysql-connector-java 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;&lt;generatorConfiguration&gt; &lt;!--导入属性配置 --&gt; &lt;properties resource=\"generator.properties\"/&gt; &lt;!-- 项目的 mysql-connector-java --&gt; &lt;classPathEntry location=\"C:\\Users\\TsuNe\\.m2\\repository\\mysql\\mysql-connector-java\\5.1.29\\mysql-connector-java-5.1.29.jar\" /&gt; &lt;context id=\"context1\"&gt; &lt;!-- 注释 --&gt; &lt;commentGenerator&gt; &lt;property name=\"suppressAllComments\" value=\"true\" /&gt;&lt;!-- 是否取消注释 --&gt; &lt;property name=\"suppressDate\" value=\"true\" /&gt; &lt;!-- 是否生成注释代时间戳 --&gt; &lt;/commentGenerator&gt; &lt;jdbcConnection driverClass=\"$&#123;driver&#125;\" connectionURL=\"$&#123;url&#125;\" userId=\"$&#123;username&#125;\" password=\"$&#123;password&#125;\" /&gt; &lt;!-- 类型转换 --&gt; &lt;javaTypeResolver&gt; &lt;!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） --&gt; &lt;property name=\"forceBigDecimals\" value=\"false\" /&gt; &lt;/javaTypeResolver&gt; &lt;javaModelGenerator targetPackage=\"$&#123;modelPackage&#125;\" targetProject=\"$&#123;modelProject&#125;\" /&gt; &lt;sqlMapGenerator targetPackage=\"$&#123;sqlPackage&#125;\" targetProject=\"$&#123;sqlProject&#125;\" /&gt; &lt;javaClientGenerator targetPackage=\"$&#123;mapperPackage&#125;\" targetProject=\"$&#123;mapperProject&#125;\" type=\"XMLMAPPER\" /&gt; &lt;!-- 如果需要通配所有表 直接用sql的通配符 %即可 --&gt; &lt;table schema=\"$&#123;schema&#125;\" tableName=\"$&#123;table&#125;\" /&gt;&lt;!-- enableCountByExample=\"false\"--&gt;&lt;!-- enableUpdateByExample=\"false\" enableDeleteByExample=\"false\"--&gt;&lt;!-- enableSelectByExample=\"false\" selectByExampleQueryId=\"false\"--&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; generatorConfig.xml的配置数据源文件jdbc.properties 12345678910111213141516driver=com.mysql.jdbc.Driver#mytest为我本地的数据库名url=jdbc:mysql://localhost:3306/vhr?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;useSSL=falseusername=root#下面输入自己数据库的密码password=mysql@123#定义初始连接数initialSize=0#定义最大连接数maxActive=20#定义最大空闲maxIdle=20#定义最小空闲minIdle=1#定义最长等待时间maxWait=60000 配置@MapperScan(basePackages = “com.tsune.vhr02.dao”)作用：指定要变成实现类的接口所在的包，然后包下面的所有接口在编译之后都会生成相应的实现类添加位置：是在Springboot启动类上面添加 Vhr02Application 123456789@SpringBootApplication@MapperScan(basePackages = \"com.tsune.vhr02.dao\")public class Vhr02Application &#123; public static void main(String[] args) &#123; SpringApplication.run(Vhr02Application.class, args); &#125;&#125; pom.xml 1234567891011&lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;/resource&gt; &lt;resource&gt; &lt;directory&gt;src/main/resources&lt;/directory&gt; &lt;includes&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;/includes&gt; &lt;/resource&gt;&lt;/resources&gt; 详情 Spring boot整合mybatis.xml资源文件放置及路径配置问题","tags":[{"name":"springboot","slug":"springboot","permalink":"http://yoursite.com/tags/springboot/"},{"name":"vue","slug":"vue","permalink":"http://yoursite.com/tags/vue/"},{"name":"前后端分离","slug":"前后端分离","permalink":"http://yoursite.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"}]}]